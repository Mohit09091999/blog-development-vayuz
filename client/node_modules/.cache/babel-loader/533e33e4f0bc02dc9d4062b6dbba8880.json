{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\SINGL\\\\OneDrive\\\\Desktop\\\\React-Express-CRUD-RestApi-Nodejs-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport apiServer from \"../config/apiServer\";\nexport var addPosts = function addPosts() {\n  return function (dispatch) {\n    apiServer.get(\"/posts\").then(function (response) {\n      if (response.data.success) {\n        dispatch({\n          type: \"ADD_POSTS\",\n          postArray: response.data.postArray\n        });\n      } else {\n        console.log(response.data.message);\n      }\n    }).catch(function (e) {\n      console.log(e);\n    });\n  };\n}; // Promise is being used to get the response data\n\nexport var addPost = function addPost(postData) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      apiServer.post(\"/post\", postData).then(function (response) {\n        if (response.data.success) {\n          dispatch({\n            type: \"ADD_POST\",\n            post: _objectSpread({}, postData, {\n              _id: response.data._id\n            })\n          });\n        } else {\n          console.log(response.data.message);\n        }\n\n        resolve(response.data);\n      }).catch(function (e) {\n        console.log(e);\n        reject(e);\n      });\n    });\n  };\n};\nexport var changeSelectedPost = function changeSelectedPost(_id) {\n  return function (dispatch) {\n    apiServer.get(\"/post/\".concat(_id)).then(function (response) {\n      if (response.data.success) {\n        dispatch({\n          type: \"CHANGE_SELECTED_POST\",\n          post: response.data.singlePost\n        });\n      } else {\n        console.log(response.data.message);\n      }\n    }).catch(function (e) {\n      console.log(e);\n    });\n  };\n};\nexport var updatePost = function updatePost(updatedData) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      apiServer.put(\"/post/\".concat(updatedData.post._id), updatedData).then(function (response) {\n        if (response.data.success) {\n          dispatch({\n            type: \"UPDATE_POST\",\n            post: updatedData\n          });\n        } else {\n          console.log(response.data.message);\n        }\n\n        resolve(response.data);\n      }).catch(function (e) {\n        console.log(e);\n        reject(e);\n      });\n    });\n  };\n};\nexport var deletePost = function deletePost(_id) {\n  return function (dispatch) {\n    apiServer.delete(\"/post/\".concat(_id)).then(function (response) {\n      if (response.data.success) {\n        dispatch({\n          type: \"DELETE_POST\",\n          _id: _id\n        });\n      } else {\n        console.log(response.data.message);\n      }\n    }).catch(function (e) {\n      console.log(e);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/SINGL/OneDrive/Desktop/React-Express-CRUD-RestApi-Nodejs-master/client/src/actions/postActions.js"],"names":["apiServer","addPosts","dispatch","get","then","response","data","success","type","postArray","console","log","message","catch","e","addPost","postData","Promise","resolve","reject","post","_id","changeSelectedPost","singlePost","updatePost","updatedData","put","deletePost","delete"],"mappings":"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","sourcesContent":["import apiServer from \"../config/apiServer\";\n\nexport const addPosts = () => {\n\treturn (dispatch) => {\n\t\tapiServer\n\t\t\t.get(\"/posts\")\n\t\t\t.then((response) => {\n\t\t\t\tif (response.data.success) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"ADD_POSTS\",\n\t\t\t\t\t\tpostArray: response.data.postArray\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(response.data.message);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n};\n\n// Promise is being used to get the response data\nexport const addPost = (postData) => {\n\treturn (dispatch) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tapiServer\n\t\t\t\t.post(\"/post\", postData)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif (response.data.success) {\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: \"ADD_POST\",\n\t\t\t\t\t\t\tpost: { ...postData, _id: response.data._id }\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(response.data.message);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(response.data);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\treject(e);\n\t\t\t\t});\n\t\t});\n\t};\n};\n\nexport const changeSelectedPost = (_id) => {\n\treturn (dispatch) => {\n\t\tapiServer\n\t\t\t.get(`/post/${_id}`)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.data.success) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"CHANGE_SELECTED_POST\",\n\t\t\t\t\t\tpost: response.data.singlePost\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(response.data.message);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n};\n\nexport const updatePost = (updatedData) => {\n\treturn (dispatch) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tapiServer\n\t\t\t\t.put(`/post/${updatedData.post._id}`, updatedData)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif (response.data.success) {\n\t\t\t\t\t\tdispatch({ type: \"UPDATE_POST\", post: updatedData });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(response.data.message);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(response.data);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\treject(e);\n\t\t\t\t});\n\t\t});\n\t};\n};\n\nexport const deletePost = (_id) => {\n\treturn (dispatch) => {\n\t\tapiServer\n\t\t\t.delete(`/post/${_id}`)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.data.success) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"DELETE_POST\",\n\t\t\t\t\t\t_id\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(response.data.message);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}